<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 开启自动化扫描 -->
    <context:component-scan base-package="com.xxxx" />

    <!-- 加载properties配置，可以读取jdbc.properties配置文件中的数据 -->
    <context:property-placeholder location="jdbc.properties"/>

    <!-- 配置C3P0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 同过property标签配置对应的值,value属性值对应的是properties配置文件中的值 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置JdbcTemplate模板对象，并注入一个数据源 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
        Spring 事务配置
            1. 添加事务与AOP的命名空间
            2. 开启AOP代理
            3. 配置事务管理器
            4. 配置事务通知
            5. 配置AOP
    -->
    <!-- 开启AOP代理 -->
    <aop:aspectj-autoproxy/>

    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源   ref代表的是C3P0数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置注解支持 -->
    <tx:annotation-driven transaction-manager="txManager"/>


</beans>